<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <node name="01. Generar un proyecto" unique_id="24" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1707057980" ts_lastsave="1707344917">
    <rich_text background="#ffffffffffff" foreground="#5e5e5c5c6464" weight="heavy">Para generar un nuevo proyecto:</rich_text>
    <rich_text>

</rich_text>
    <rich_text background="#ffffffffffff" foreground="#3d3d38384646" weight="heavy">[+] ng new</rich_text>
    <rich_text>

ng new [name]

</rich_text>
    <rich_text indent="3" underline="single" weight="heavy">Creates a new Angular workspace.</rich_text>
    <rich_text>

Arguments:
  name  The name of the new workspace and initial project.                                                      [string]
Options:
      --help                Shows a help message for this command in the console.                              [boolean]
      --interactive         Enable interactive input prompts.                                  [boolean] [default: true]
      --dry-run             Run through and reports activity without writing out results.     [boolean] [default: false]
      --defaults            Disable interactive input prompts for options with a default.     [boolean] [default: false]
      --force               Force overwriting of existing files.                              [boolean] [default: false]
  -c, --collection          A collection of schematics to use in generating the initial application.            [string]
      --commit              Initial git repository commit information.                         [boolean] [default: true]
      --create-application  Create a new initial application project in the 'src' folder of the new workspace. When
                            false, creates an empty workspace with no initial application. You can then use the generate
                            application command so that all applications are created in the projects folder.
                                                                                               [boolean] [default: true]
      --directory           The directory name to create the workspace in.                                      [string]
  -s, --inline-style        Include styles inline in the component TS file. By default, an external styles file is
                            created and referenced in the component TypeScript file.                           [boolean]
  -t, --inline-template     Include template inline in the component TS file. By default, an external template file is
                            created and referenced in the component TypeScript file.                           [boolean]
      --minimal             Create a workspace without any testing frameworks. (Use for learning purposes only.)
                                                                                              [boolean] [default: false]
      --new-project-root    The path where new projects will be created, relative to the new workspace root.
                                                                                          [string] [default: "projects"]
      --package-manager     The package manager used to install dependencies.
                                                                       [string] [choices: "npm", "yarn", "pnpm", "cnpm"]
  -p, --prefix              The prefix to apply to generated selectors for the initial project.[string] [default: "app"]
      --routing             Generate a routing module for the initial project.                                 [boolean]
  -g, --skip-git            Do not initialize a git repository.                               [boolean] [default: false]
      --skip-install        Do not install dependency packages.                               [boolean] [default: false]
  -S, --skip-tests          Do not generate "spec.ts" test files for the new project.         [boolean] [default: false]
      --standalone          Creates an application based upon the standalone API, without NgModules.
                                                                                              [boolean] [default: false]
      --strict              Creates a workspace with stricter type checking and stricter bundle budgets settings. This
                            setting helps improve maintainability and catch bugs ahead of time. For more information,
                            see </rich_text>
    <rich_text link="webs https://angular.io/guide/strict-mode">https://angular.io/guide/strict-mode</rich_text>
    <rich_text>                           [boolean] [default: true]
      --style               The file extension or preprocessor to use for style files.
                                                                       [string] [choices: "css", "scss", "sass", "less"]
      --view-encapsulation  The view encapsulation strategy to use in the initial project.
                                                                     [string] [choices: "Emulated", "None", "ShadowDom"]
</rich_text>
    <rich_text background="#ffffffffffff" foreground="#5e5e5c5c6464" weight="heavy">[+] Podriamos correr entonces</rich_text>
    <rich_text>

09:42:35 &gt; ng new project-a --routing --style=css

CREATE project-a/angular.json (2715 bytes)
CREATE project-a/package.json (1040 bytes)
CREATE project-a/README.md (1062 bytes)
CREATE project-a/tsconfig.json (901 bytes)
CREATE project-a/.editorconfig (274 bytes)
CREATE project-a/.gitignore (548 bytes)
CREATE project-a/tsconfig.app.json (263 bytes)
CREATE project-a/tsconfig.spec.json (273 bytes)
CREATE project-a/.vscode/extensions.json (130 bytes)
CREATE project-a/.vscode/launch.json (470 bytes)
CREATE project-a/.vscode/tasks.json (938 bytes)
CREATE project-a/src/main.ts (214 bytes)
CREATE project-a/src/favicon.ico (948 bytes)
CREATE project-a/src/index.html (294 bytes)
CREATE project-a/src/styles.css (80 bytes)
CREATE project-a/src/app/app-routing.module.ts (245 bytes)
CREATE project-a/src/app/app.module.ts (393 bytes)
CREATE project-a/src/app/app.component.html (22709 bytes)
CREATE project-a/src/app/app.component.spec.ts (1000 bytes)
CREATE project-a/src/app/app.component.ts (213 bytes)
CREATE project-a/src/app/app.component.css (0 bytes)
CREATE project-a/src/assets/.gitkeep (0 bytes)


</rich_text>
    <rich_text background="#ffffffffffff" foreground="#5e5e5c5c6464" weight="heavy">[+] Se vería así</rich_text>
    <rich_text>

project-a/
┣ .angular/
┣ .vscode/
┣ node_modules/
┣ src/
┣ .editorconfig
┣ .gitignore
┣ angular.json
┣ package-lock.json
┣ package.json
┣ README.md
┣ tsconfig.app.json
┣ tsconfig.json
┗ tsconfig.spec.json

</rich_text>
    <rich_text background="#ffffffffffff" foreground="#5e5e5c5c6464" weight="heavy">[+] Y despues corremos el proyecto para ver si funciona
</rich_text>
    <rich_text>
09:57:48 ❯ ng serve --help
ng serve [project]

Builds and serves your application, rebuilding on file changes.

Arguments:
  project  The name of the project to build. Can be an application or a library.         [string] [choices: "project-a"]
Options:
      --help                Shows a help message for this command in the console.                              [boolean]
  -c, --configuration       One or more named builder configurations as a comma-separated list as specified in the
                            "configurations" section in angular.json.
                            The builder uses the named configurations to run the given target.
                            For more information, see
                            </rich_text>
    <rich_text link="webs https://angular.io/guide/workspace-config#alternate-build-configurations.">https://angular.io/guide/workspace-config#alternate-build-configurations.</rich_text>
    <rich_text>
                                                                         [string] [choices: "development", "production"]
      --allowed-hosts       List of hosts that are allowed to access the dev server.                             [array]
      --browser-target      A browser builder target to serve in the format of `project:target[:configuration]`. You can
                            also pass in more than one configuration name as a comma-separated list. Example:
                            `project:target:production,staging`.                                                [string]
      --disable-host-check  Don't verify connected clients are part of allowed hosts.         [boolean] [default: false]
      --force-esbuild       Force the development server to use the 'browser-esbuild' builder when building. This is a
                            developer preview option for the esbuild-based build system.      [boolean] [default: false]
      --hmr                 Enable hot module replacement.                                    [boolean] [default: false]
      --host                Host to listen on.                                           [string] [default: "localhost"]
      --live-reload         Whether to reload the page on change, using live-reload.           [boolean] [default: true]
  -o, --open                Opens the url in default browser.                                 [boolean] [default: false]
      --poll                Enable and define the file watching poll time period in milliseconds.               [number]
      --port                Port to listen on.                                                  [number] [default: 4200]
      --proxy-config        Proxy configuration file. For more information, see
                            </rich_text>
    <rich_text link="webs https://angular.io/guide/build#proxying-to-a-backend-server.">https://angular.io/guide/build#proxying-to-a-backend-server.</rich_text>
    <rich_text>                        [string]
      --public-host         The URL that the browser client (or live-reload client, if enabled) should use to connect to
                            the development server. Use for a complex dev server setup, such as one with reverse
                            proxies.                                                                            [string]
      --serve-path          The pathname where the application will be served.                                  [string]
      --ssl                 Serve using HTTPS.                                                [boolean] [default: false]
      --ssl-cert            SSL certificate to use for serving HTTPS.                                           [string]
      --ssl-key             SSL key to use for serving HTTPS.                                                   [string]
      --verbose             Adds more details to output logging.                                               [boolean]
      --watch               Rebuild on change.                                                 [boolean] [default: true]
      
      
</rich_text>
    <rich_text scale="h1" background="#ffffffffffff" foreground="#5e5e5c5c6464" weight="heavy">[+] Escogiendo el puerto:</rich_text>
    <rich_text>

ng serve --port=4201

</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <encoded_png char_offset="9667" justification="left" link="" sha256sum="50789e28b4d9db0966cc086ccdf480d3aadb358e5cc018eeb009ca62ad9e6bea"/>
    <encoded_png char_offset="9670" justification="left" link="" sha256sum="3999667e50b88ff5c2323c4496a86b57fadbc68ed51f5a69c3c57b0ae6ff5347"/>
  </node>
</cherrytree>
